name: Release

on:
  push:
    branches: ['main']

jobs:
  versions:
    name: versions
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      latest_released_version: ${{ steps.tag.outputs.latest_released_version }}
      package_version: ${{ steps.package.outputs.package_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node based on .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Get Package Version
        id: package
        run: |
          package_version=v$(node -p -e 'require("./package.json").version')
          echo "Package.json version: $package_version"
          echo "package_version=$package_version" >> "$GITHUB_OUTPUT"
      - name: Get Latest Release Version
        id: tag
        run: |
          latest_released_version=$(git tag | sort --version-sort | tail -n1)
          echo "Latest Release Version: $latest_released_version"
          echo "latest_released_version=$latest_released_version" >> "$GITHUB_OUTPUT"

  release:
    name: release
    needs: versions
    if: needs.versions.outputs.latest_released_version != needs.versions.outputs.package_version
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node based on .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@mpeyfuss'
      - name: Install Packages
        run: npm install
      - name: Build Library
        run: npm run build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.versions.outputs.package_version }}
          release_name: 'Library Version ${{ needs.versions.outputs.package_version }}'
      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}